#!/usr/bin/env python3
"""
DiffUse - AI-powered Git diff explanation tool
Usage: 
  diffuse                    # Explain unstaged changes
  diffuse --staged           # Explain staged changes  
  diffuse HEAD~1             # Explain diff from specific commit
  diffuse --help             # Show help
"""

import os
import sys
import subprocess
import argparse

# Get the directory where this script is located
SCRIPT_DIR = os.path.dirname(os.path.abspath(__file__))
EXPLAIN_SCRIPT = os.path.join(SCRIPT_DIR, "scripts", "explain_diff.py")

def get_git_diff(ref=None, staged=False):
    """Get git diff output"""
    try:
        if staged:
            cmd = ["git", "diff", "--staged"]
        elif ref:
            cmd = ["git", "diff", ref]
        else:
            cmd = ["git", "diff"]
            
        result = subprocess.run(cmd, capture_output=True, text=True, check=True)
        return result.stdout
    except subprocess.CalledProcessError as e:
        print(f"Error getting git diff: {e}")
        return None

def main():
    parser = argparse.ArgumentParser(description="AI-powered Git diff explanation")
    parser.add_argument("ref", nargs="?", help="Git reference to compare against (e.g., HEAD~1)")
    parser.add_argument("--staged", action="store_true", help="Explain staged changes")
    parser.add_argument("--version", action="version", version="DiffUse 1.0")
    
    args = parser.parse_args()
    
    # Check if we're in a git repository
    try:
        subprocess.run(["git", "rev-parse", "--git-dir"], 
                      capture_output=True, check=True)
    except subprocess.CalledProcessError:
        print("Error: Not in a git repository")
        sys.exit(1)
    
    # Get the diff
    diff_output = get_git_diff(args.ref, args.staged)
    
    if not diff_output:
        print("No changes to explain")
        sys.exit(0)
        
    if not diff_output.strip():
        print("No changes detected")
        sys.exit(0)
    
    # Run the explanation script
    try:
        result = subprocess.run([sys.executable, EXPLAIN_SCRIPT], 
                              input=diff_output, text=True, 
                              capture_output=True, check=True)
        print(result.stdout)
    except subprocess.CalledProcessError as e:
        print(f"Error explaining diff: {e}")
        if e.stderr:
            print(f"Details: {e.stderr}")
        sys.exit(1)

if __name__ == "__main__":
    main()
