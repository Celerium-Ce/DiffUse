name: Diff Explainer

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:  # Allow manual triggering

jobs:
  explain-diff:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Get full history for proper diff

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Get PR diff
      id: get_diff
      run: |
        # Get the diff for the PR
        git fetch origin ${{ github.event.pull_request.base.ref }}
        DIFF=$(git diff origin/${{ github.event.pull_request.base.ref }}..HEAD)
        
        # Save diff to file (GitHub Actions has issues with large env vars)
        echo "$DIFF" > pr_diff.txt
        
        # Also save as multiline string for potential use
        echo "diff<<EOF" >> $GITHUB_OUTPUT
        echo "$DIFF" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Generate diff explanation
      id: explain
      env:
        OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
      run: |
        # Run the explanation script
        EXPLANATION=$(python scripts/explain_diff.py < pr_diff.txt)
        
        # Save explanation to output
        echo "explanation<<EOF" >> $GITHUB_OUTPUT
        echo "$EXPLANATION" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Comment on PR
      uses: actions/github-script@v7
      with:
        script: |
          const explanation = `${{ steps.explain.outputs.explanation }}`;
          
          // Create or update comment
          const commentBody = `## üîç Diff Explanation
          
          ${explanation}
          
          ---
          *This explanation was generated automatically by DiffUse*`;
          
          // Check if we already have a comment from this bot
          const comments = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });
          
          const existingComment = comments.data.find(comment => 
            comment.user.type === 'Bot' && 
            comment.body.includes('üîç Diff Explanation')
          );
          
          if (existingComment) {
            // Update existing comment
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: existingComment.id,
              body: commentBody
            });
          } else {
            // Create new comment
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: commentBody
            });
          }
